
% REPORT DOCUMENT STYLE -- released 23 September 85
%    for LaTeX version 2.09
% Copyright (C) 1985 by Leslie Lamport

% $Id: the12.doc,v 1.6 87/12/03 13:52:37 riedl Exp Locker: riedl $
%
% Converted to LaTeX version 2.09 January 20, 1986 by John Riedl
% report format adapted for Purdue theses July, 1985 by Stephan Bectolsheim
%
% **** Modification History ****
%
%  2/16/86 -- Changed advspace to addvspace in \chapter command.  - jtr
%  6/04/86 -- added thesistitlepage to produce fancy title page   - jtr
%  6/05/86 -- changed top margin to work with new dvipr program   - jtr
%  6/26/86 -- checked into RCS                                    - jtr
%
\comment{
$Log:	the12.doc,v $
Revision 1.6  87/12/03  13:52:37  riedl
Changed separator page to be vertically centered (as before!). -jtr

Revision 1.5  87/07/01  10:26:31  riedl
o \tableofcontents and \endabstract change back to \doublespace

Revision 1.4  87/04/22  16:18:36  riedl
o Added automatic separator page before bibliography.

Revision 1.3  86/07/18  09:20:19  riedl
- changed acknowledgements, vita, ... to use \chapter* command
- changed separator pages/dedication to be 1/3 of way down page

Revision 1.2  86/07/01  14:16:58  riedl
>From Jameson Burt

- multi-line chapter headings
- separator pages
- special table of contents entry for appendices
- 'Figure', 'Table' and 'Page' as necessary in toc, lot, lof

I added the following features:

* New environments
  - acknowledgments
  - dedication (automatic vertical centering)
  - vita
  - abstract
* each of these has the following features:
  - separator page and toc entry if necessary
  - title centered and two inches from top of page
  - correct page numbering
  - used with \begin{abstract} ... abstract text ... \end{abstract}

* new maketitle command for thesis
  - creates correct title page with fancy `Submitted to the Faculty' stuff
  - uses \author, \title, and \date
  - folds title to uppercase
  - permits \thanks, but ignores it

* chapter titles are automatically folded to uppercase
  - new command `\nofoldchapter' that works like old `\chapter'
  - folds toc entry also

* \singlespace and \doublespace commands are built-in to style
  - same function as old \os and \ds 

* improved \appendix command
  - produces separator page
  - generates correct toc entry
  - \appendix* prints word `APPENDIX' instead of `APPENDICES'

John Riedl

Revision 1.1  86/06/26  10:23:17  riedl
Initial revision
}
%
%
%  ****************************************
%  *               FONTS                  *
%  ****************************************
%

\lineskip 1pt            % \lineskip is 1pt for all font sizes.
\normallineskip 1pt
\def\baselinestretch{1.5}
%
\newcommand{\oneskip}{1.1}
\newcommand{\twoskip}{1.5}
\newcommand{\threeskip}{1.8}
%
% These commands can be used in the thesis to switch between single
% and double spacing.  This is needed, for instance, in the abstract.
%
\newcommand{\singlespace}
     {\renewcommand{\baselinestretch}{\oneskip}\Large\normalsize}
\newcommand{\doublespace}
     {\renewcommand{\baselinestretch}{\twoskip}\Large\normalsize}
\newcommand{\triplespace}
     {\renewcommand{\baselinestretch}{\threeskip}\Large\normalsize}

% Each size-changing command \SIZE executes the command
%        \@setsize\SIZE{BASELINESKIP}\FONTSIZE\@FONTSIZE
% where:
%   BASELINESKIP = Normal value of \baselineskip for that size.  (Actual 
%                  value will be \baselinestretch * BASELINESKIP.)
%
%  \FONTSIZE     = Name of font-size command.  The currently available
%                  (preloaded) font sizes are: \vpt (5pt), \vipt (6pt),
%                  \viipt (etc.), \viiipt, \ixpt, \xpt, \xipt, \xiipt,
%                  \xivpt, \xviipt, \xxpt, \xxvpt.
%  \@FONTSIZE    = The same as the font-size command except with an
%                  '@' in front---e.g., if \FONTSIZE = \xivpt then
%                  \@FONTSIZE = \@xivpt.
%
% For reasons of efficiency that needn't concern the designer,
% the document style defines \@normalsize instead of \normalsize .  This is
% done only for \normalsize, not for any other size-changing commands.

\def\@normalsize{\@setsize\normalsize{14.5pt}\xiipt\@xiipt
\abovedisplayskip 12pt plus3pt minus7pt%
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip  \z@ plus3pt%   
\belowdisplayshortskip  6.5pt plus3.5pt minus3pt}

\def\small{\@setsize\small{13.6pt}\xipt\@xipt
\abovedisplayskip 11pt plus3pt minus6pt%
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip  \z@ plus3pt%   
\belowdisplayshortskip  6.5pt plus3.5pt minus3pt
\def\@listi{\parsep 4.5pt plus 2pt minus 1pt
            \itemsep \parsep
            \topsep 9pt plus 3pt minus 5pt}}

\def\footnotesize{\@setsize\footnotesize{12pt}\xpt\@xpt
\abovedisplayskip 10pt plus2pt minus5pt%
\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip  \z@ plus3pt%   
\belowdisplayshortskip  6pt plus3pt minus3pt
\def\@listi{\topsep 6pt plus 2pt minus 2pt\parsep 3pt plus 2pt minus 1pt
\itemsep \parsep}}

\def\scriptsize{\@setsize\scriptsize{9.5pt}\viiipt\@viiipt}
\def\tiny{\@setsize\tiny{7pt}\vipt\@vipt}
\def\largesize{\@setsize\large{14pt}\xivpt\@xivpt}
\def\large{\@setsize\large{18pt}\xivpt\@xivpt}
\def\Large{\@setsize\Large{22pt}\xviipt\@xviipt}
\def\LARGE{\@setsize\LARGE{25pt}\xxpt\@xxpt}
\def\huge{\@setsize\huge{30pt}\xxvpt\@xxvpt}
\let\Huge=\huge

\normalsize  % Choose the normalsize font.


%  ****************************************
%  *            PAGE LAYOUT               *
%  ****************************************
%
% All margin dimensions measured from a point one inch from top and side
% of page.  

% SIDE MARGINS:
\if@twoside                 % Values for two-sided printing:
   \oddsidemargin 21pt      %   Left margin on odd-numbered pages.
   \evensidemargin 59pt     %   Left margin on even-numbered pages.
   \marginparwidth 85pt    %   Width of marginal notes.
\else                       % Values for one-sided printing:
   %\oddsidemargin 45pt      %   Note that \oddsidemargin = \evensidemargin
   %\evensidemargin 45pt
   \oddsidemargin 20pt      %   Note that \oddsidemargin = \evensidemargin
   \evensidemargin 20pt
   \marginparwidth 68pt 
\fi
\marginparsep 10pt          % Horizontal space between outer margin and 
                            % marginal note


% VERTICAL SPACING:        
                         % Top of page:
\topmargin  -36pt         %    Nominal distance from top of page to top of
                         %    box containing running head.
\headheight 12pt         %    Height of box containing running head.
\headsep 30pt            %    Space between running head and text.
% \topskip = 10pt        %    '\baselineskip' for first line of page.
                         % Bottom of page:
\footheight 12pt         %    Height of box containing running foot.
\footskip 30pt           %    Distance from baseline of box containing foot 
                         %    to baseline of last line of text.


% DIMENSION OF TEXT:

%\textheight 8.6in        % Height of text (including footnotes and figures,
\textheight 8.7in        % Height of text (including footnotes and figures, 
                         % excluding running head and foot).
\textwidth 5.8in         % Width of text line.
                         % For two-column mode: 
\columnsep 10pt          %    Space between columns 
\columnseprule 0pt       %    Width of rule between columns.

% A \raggedbottom command causes 'ragged bottom' pages: pages set to
% natural height instead of being stretched to exactly \textheight.

% FOOTNOTES:

\footnotesep 8.4pt    % Height of strut placed at the beginning of every
                      % footnote = height of normal \footnotesize strut,
                      % so no extra space between footnotes.

\skip\footins 10.8pt plus 4pt minus 2pt  % Space between last line of text and 
                                         % top of first footnote.

% FLOATS: (a float is something like a figure or table)
%
%  FOR FLOATS ON A TEXT PAGE:
%
%    ONE-COLUMN MODE OR SINGLE-COLUMN FLOATS IN TWO-COLUMN MODE:
\floatsep 14pt plus 2pt minus 4pt        % Space between adjacent floats moved
                                         % to top or bottom of text page.
\textfloatsep 20pt plus 2pt minus 4pt    % Space between main text and floats
                                         % at top or bottom of page.
\intextsep 14pt plus 4pt minus 4pt       % Space between in-text figures and 
                                         % text.
\@maxsep 20pt                            % The maximum of \floatsep, 
                                         % \textfloatsep and \intextsep (minus
                                         % the stretch and shrink).
%    TWO-COLUMN FLOATS IN TWO-COLUMN MODE:
\dblfloatsep 14pt plus 2pt minus 4pt     % Same as \floatsep for double-column
                                         % figures in two-column mode.
\dbltextfloatsep 20pt plus 2pt minus 4pt % \textfloatsep for double-column 
                                         % floats.
\@dblmaxsep 20pt                         % The maximum of \dblfloatsep and 
                                         % \dbltexfloatsep.

%  FOR FLOATS ON A SEPARATE FLOAT PAGE OR COLUMN:
%    ONE-COLUMN MODE OR SINGLE-COLUMN FLOATS IN TWO-COLUMN MODE:
\@fptop 0pt plus 1fil    % Stretch at top of float page/column. (Must be    
                         % 0pt plus ...)                                    
\@fpsep 10pt plus 2fil    % Space between floats on float page/column.       
\@fpbot 0pt plus 1fil    % Stretch at bottom of float page/column. (Must be 
                         % 0pt plus ... )                                   

%   DOUBLE-COLUMN FLOATS IN TWO-COLUMN MODE.
\@dblfptop 0pt plus 1fil % Stretch at top of float page. (Must be 0pt plus ...)
\@dblfpsep 10pt plus 2fil % Space between floats on float page.
\@dblfpbot 0pt plus 1fil % Stretch at bottom of float page. (Must be 
                         % 0pt plus ... )                                   
% MARGINAL NOTES:
%
\marginparpush 7pt       % Minimum vertical separation between two marginal 
                         % notes.


%  ****************************************
%  *           PARAGRAPHING               *
%  ****************************************
%
\parskip 0pt plus 1pt              % Extra vertical space between paragraphs.
\parindent 1.5em                   % Width of paragraph indentation.
\topsep 10pt plus 4pt minus 6pt    % Extra vertical space, in addition to 
                                   % \parskip, added above and below list and
                                   % paragraphing environments.
\partopsep 3pt plus 2pt minus 2pt  % Extra vertical space, in addition to 
                                   % \parskip and \topsep, added when user
                                   % leaves blank line before environment.
\itemsep 5pt plus 2.5pt minus 1pt  % Extra vertical space, in addition to
                                   % \parskip, added between list items.

% The following page-breaking penalties are defined

\@lowpenalty   51      % Produced by \nopagebreak[1] or \nolinebreak[1]
\@medpenalty  151      % Produced by \nopagebreak[2] or \nolinebreak[2]
\@highpenalty 301      % Produced by \nopagebreak[3] or \nolinebreak[3]

\@beginparpenalty -\@lowpenalty    % Before a list or paragraph environment.
\@endparpenalty   -\@lowpenalty    % After a list or paragraph environment.
\@itempenalty     -\@lowpenalty    % Between list items.

% \clubpenalty         % 'Club line'  at bottom of page.
% \widowpenalty        % 'Widow line' at top of page.
% \displaywidowpenalty % Math display widow line.
% \predisplaypenalty   % Breaking before a math display.
% \postdisplaypenalty  % Breaking after a math display.
% \interlinepenalty    % Breaking at a line within a paragraph.
% \brokenpenalty       % Breaking after a hyphenated line.


%    ****************************************
%    *        CHAPTERS AND SECTIONS         *
%    ****************************************
%

\def\part{\cleardoublepage   % Starts new page.
   \thispagestyle{plain}     % Page style of part page is 'plain'
  \if@twocolumn              % IF two-column style
     \onecolumn              %  THEN \onecolumn
     \@tempswatrue           %       @tempswa := true
    \else \@tempswafalse     %  ELSE @tempswa := false
  \fi                        % FI
  \hbox{}\vfil               % Add fil glue to center title
  \bgroup  \centering        % BEGIN centering
  \secdef\@part\@spart}

\def\@part[#1]#2{\ifnum \c@secnumdepth >-2\relax  % IF secnumdepth > -2
        \refstepcounter{part}                     %   THEN step part counter
        \addcontentsline{toc}{part}{\thepart      %        add toc line
        \hspace{1em}#1}\else                      %   ELSE add unnumbered line
        \addcontentsline{toc}{part}{#1}\fi        % FI
   \markboth{}{}
    \ifnum \c@secnumdepth >-2\relax  % IF secnumdepth > -2
      \huge\bf Part \thepart         %   THEN Print 'Part' and number
    \par                             %         in \huge bold.
    \vskip 20pt \fi                  %        Add space before title.
    \Huge \bf                        % FI
    #1\@endpart}                     % Print Title in \Huge bold.

% \@endpart finishes the part page
%
\def\@endpart{\par\egroup     % END centering
   \vfil\newpage              % End page with 1fil glue.
   \if@twoside                % IF twoside printing
       \hbox{}                %   THEN Produce totally blank page
       \thispagestyle{empty}
       \newpage
   \fi                        % FI
   \if@tempswa                % IF @tempswa = true
     \twocolumn               %   THEN \twocolumn
   \fi}                       % FI

\def\@spart#1{\Huge \bf                      % Print title in \huge boldface
   #1\@endpart}

% \@makechapterhead {TEXT} : Makes the heading for the \chapter command.
%
% Note: the \singlespace definition in this and the following command
% has two functions.  It singlespaces multi-line chapter headings, and
% it makes sure that the heading appears at the same place on the page
% regardless of the mode in which the text is being set.  This latter
% discovery was rather painful, and was due to an insight from Cal Ribbens.

\def\@makechapterhead#1{             % Heading for \chapter command
  \vspace*{1pt}                     % Space at top of text page.
  { \parindent 0pt
    \triplespace
    \normalsize\bf
    \ifnum \c@secnumdepth >\m@ne     % IF secnumdepth > -1 THEN
		{		     %   typeset with chapter number
    		\vskip 20pt
		\newbox\chbox
                %bug, 89.04.15
                \ifnum \c@bug=0
  		  \setbox\chbox = \hbox{\LARGE \bf CHAPTER \ \ \Roman{chapter}}
                \else
  		  \setbox\chbox = \hbox{\LARGE \bf \@chapapp \ \ \thechapter}
                \fi
                %
		\hbox to \hsize{\hfil \box\chbox \hfil}
    		\vskip 20pt
		\setbox\chbox = \hbox{\LARGE \bf {#1}}
		\ifdim \wd\chbox > \hsize	% IF too wide for one line
			\unhbox\chbox		%   set as normal paragraph
		\else				% ELSE center
			\hbox to \hsize{\hfil \box\chbox \hfil}
		\fi
		}
	\else			     % ELSE simply typeset chapter name
		 \hbox to \hsize{\hfill#1\hfill}
	\fi
	\par
    \nobreak                         % TeX penalty to prevent page break.
    %\vskip 20pt                      % Space between title and text.
  } }

\def\@makemychapterhead#1{             % Heading for \chapter command
  \vspace*{50pt}                     % Space at top of text page.
  { \parindent 0pt
    \singlespace
    \normalsize\bf
    \ifnum \c@secnumdepth >\m@ne     % IF secnumdepth > -1 THEN
		{		     %   typeset with chapter number
		\newbox\chbox
		\setbox\chbox = \hbox{\bf \thechapter.\ \ {#1}}
		\ifdim \wd\chbox > \hsize	% IF too wide for one line
			\unhbox\chbox		%   set as normal paragraph
		\else				% ELSE center
			\hbox to \hsize{\hfil \box\chbox \hfil}
		\fi
		}
	\else			     % ELSE simply typeset chapter name
		 \hbox to \hsize{\hfill#1\hfill}
	\fi
	\par
    \nobreak                         % TeX penalty to prevent page break.
    \vskip 20pt                      % Space between title and text.
  } }

% \@makeschapterhead {TEXT} : Makes the heading for the \chapter* command.
%

\def\@makeschapterhead#1{            % Heading for \chapter* command
  \vspace*{50pt}                     % Space at top of page.
  { \parindent 0pt
    \singlespace
    \normalsize \bf                  % Title.
	{
	\newbox\chbox
	\setbox\chbox = \hbox{#1}
	\ifdim \wd\chbox > \hsize	% IF too wide for one line
		\unhbox\chbox		%   set as normal paragraph
	\else				% ELSE center
		\hbox to \hsize{\hfil \box\chbox \hfil}
	\fi
	}\par
    \nobreak                         % TeX penalty to prevent page break.
    \vskip 20pt                      % Space between title and text.
  } }

% \secdef{UNSTARCMDS}{STARCMDS} :
%    When defining a \chapter or \section command without using
%    \@startsection, you can use \secdef as follows:
%       \def\chapter { ... \secdef \CMDA \CMDB }
%       \def\CMDA    [#1]#2{ ...   % Command to define \chapter[...]{...}
%       \def\CMDB    #1{ ...       % Command to define \chapter*{...}

%
% \@chaptername is a function that must be defined by the chapter command.
% It is provided as a hook to permit the chapter name to be modified
% automatically if required by the style.  Currently it converts the chapter
% name to uppercase.

% Start chapter, folding heading to uppercase.
\def\mychapter{
  \def\@chaptername##1{##1}
  \@beginmychapter
}

% Start chapter, folding heading to uppercase.
\def\chapter{
  \def\@chaptername##1{##1}
  \@beginchapter
}

% Start chapter without folding heading to uppercase.
\def\nofoldchapter{
  \def\@chaptername##1{##1}
  \@beginchapter
}

% \@beginchapter actually starts the new chapter off.  The last line uses
% \secdef (mentioned above) to decide whether this is a chapter* or
% chapter command.
%
\def\@beginchapter{\clearpage% Starts new page.
   \global\@topnum\z@        % Prevents figures from going at top of page.
   \@afterindenttrue         % \@afterindenttrue  => indent first line
%  \@afterindentfalse        % \@afterindentfalse => don't indent first line
   \secdef\@chapter\@schapter}   % is this chapter* or chapter ?

\def\@beginmychapter{\clearpage% Starts new page.
   \global\@topnum\z@        % Prevents figures from going at top of page.
   \@afterindenttrue         % \@afterindenttrue  => indent first line
%  \@afterindentfalse        % \@afterindentfalse => don't indent first line
   \secdef\@mychapter\@schapter}   % is this chapter* or chapter ?

\def\@chapter[#1]#2{\ifnum \c@secnumdepth >\m@ne
        \refstepcounter{chapter}
        \typeout{\@chapapp\space\thechapter.}
        \addcontentsline{toc}{chapter}{\protect
        \numberline{\thechapter.} \@chaptername{#1}}\else
      \addcontentsline{toc}{chapter}{\@chaptername{#1}}\fi
   \chaptermark{#1}
%   \addtocontents{toc}{\protect\addvspace{10pt}} - removed by jtr
   \if@twocolumn                                 % Tests for two-column mode.  
           \@topnewpage[\@makechapterhead{\@chaptername{#2}}]  
     \else \@makechapterhead{\@chaptername{#2}}
           \@afterheading                  % Routine called after chapter and
     \fi}                                  % section heading.

\def\@mychapter[#1]#2{\ifnum \c@secnumdepth >\m@ne
        \refstepcounter{chapter}
        \typeout{\@chapapp\space\thechapter.}
        \addcontentsline{toc}{chapter}{
        Chapter \Roman{chapter}. \@chaptername{#1}}\else
      \addcontentsline{toc}{chapter}{\@chaptername{#1}}\fi
   \chaptermark{#1}
%   \addtocontents{toc}{\protect\addvspace{10pt}} - removed by jtr
   \if@twocolumn                                 % Tests for two-column mode.  
           \@topnewpage[\@makemychapterhead{\@chaptername{#2}}]  
     \else \@makemychapterhead{\@chaptername{#2}}
           \@afterheading                  % Routine called after chapter and
     \fi}                                  % section heading.

\def\@schapter#1{\if@twocolumn 
	\@topnewpage[\@makeschapterhead{\@chaptername{#1}}]
        \else \@makeschapterhead{\@chaptername{#1}} 
              \@afterheading\fi}

% \@startsection {NAME}{LEVEL}{INDENT}{BEFORESKIP}{AFTERSKIP}{STYLE}
%            optional * [ALTHEADING]{HEADING}
%    Generic command to start a section.
%    NAME       : e.g., 'subsection'
%    LEVEL      : a number, denoting depth of section -- e.g., chapter=1,
%                 section = 2, etc.  A section number will be printed if
%                 and only if LEVEL < or = the value of the secnumdepth
%                 counter.
%    INDENT     : Indentation of heading from left margin
%    BEFORESKIP : Absolute value = skip to leave above the heading.
%                 If negative, then paragraph indent of text following
%                 heading is suppressed.
%    AFTERSKIP  : if positive, then skip to leave below heading,
%                       else - skip to leave to right of run-in heading.
%    STYLE      : commands to set style
%  If '*' missing, then increments the counter.  If it is present, then
%  there should be no [ALTHEADING] argument.  A sectioning command
%  is normally defined to \@startsection + its first six arguments.

% Changed \beforeskip to positive in section, subsection and subsubsection,
% so first line of unit will be indented. -jtr
%
\def\mysection{\@startsection {section}{1}{\z@}{3.5ex plus -1ex minus 
    -.2ex}{2.3ex plus .2ex}{\normalsize\bf}}
\def\section{\@startsection {section}{1}{\z@}{3.5ex plus -1ex minus 
    -.2ex}{2.3ex plus .2ex}{\Large\bf}}
\def\subsection{\@startsection{subsection}{2}{\z@}{3.25ex plus -1ex minus 
   -.2ex}{1.5ex plus .2ex}{\Large\bf}}
\def\subsubsection{\@startsection{subsubsection}{3}{\z@}{3.25ex plus 
   -1ex minus -.2ex}{1.5ex plus .2ex}{\large\bf}}
\def\paragraph{\@startsection
     {paragraph}{4}{\z@}{3.25ex plus 1ex minus .2ex}{-1em}{\normalsize\bf}}
\def\subparagraph{\@startsection
     {subparagraph}{4}{\parindent}{3.25ex plus 1ex minus 
     .2ex}{-1em}{\normalsize\bf}}

% Default initializations of \...mark commands.  (See below for their
% us in defining page styles.
%

\def\chaptermark#1{}
% \def\sectionmark#1{}           % Preloaded definitions
% \def\subsectionmark#1{}
% \def\subsubsectionmark#1{}
% \def\paragraphmark#1{}
% \def\subparagraphmark#1{}

% The value of the counter secnumdepth gives the depth of the
% highest-level sectioning command that is to produce section numbers.
%

\setcounter{secnumdepth}{3}

% SEPARATOR Pages
% The following creates a blank page with a single word centered
% horizontally and vertically.
% The page is neither counted nor numbered.
% These pages are required in the thesis format before sections such
% as appendices, vita, bibliography, etc.  - jtr
%
\def\separatorpage#1{
  \newpage
  \thispagestyle{empty}
  \addtocounter{page}{-1}
  \null
  \vfil\vfil
  \begin{center}
    {\bf #1} 
  \end{center}
  \vfil\vfil
  \newpage
}

% APPENDIX
%
% The \appendix command must do the following:
%    -- reset the chapter counter to zero
%    -- set \@chapapp to Appendix (for messages)
%    -- redefine the chapter counter to produce appendix numbers
%    -- reset the section counter to zero
%    -- redefine the \chapter command if appendix titles and headings are
%       to look different from chapter titles and headings.
%    -- produce special toc, lot and lof entries
%    -- produce separator page with word APPENDIX centered
% - jtr
%
\def\appendix{\par
  \setcounter{chapter}{0}
  \setcounter{section}{0}
   % bug disable
  %
  \setcounter{bug}{1}   %bug, 89.04.15
  \def\@chapapp{Appendix}
  \def\thechapter{\Alph{chapter}}

  \@ifstar{\@appendix{Appendix}}{\@appendix{Appendixes}}
}

\def\@appendix#1{
%
% generate separator page with `appendix' centered
%
  \separatorpage{#1}
%
% Produce the toc, lof, and lot entries for the start of the appendices.
% This entry should not have a number or page number with it, but
% otherwise should be like a chapter entry.  For the lot and toc, the
% entries should also have the word Figure or Table repeated below them.
%

  % bug disable
%   \addtocontents{toc}{
%     \protect\addvspace{\@tocchapterskip}
%     \hbox to \hsize{\bf #1 \hfil}
%     \protect\addvspace{\@tocchapterskip}
%   }

%  \addtocontents{lot}{
%    \protect\addvspace{\@tocchapterskip}
%    \hbox to \hsize{\bf #1 \hfil}
%    \hbox to \hsize{Table \hfil}
%  }
}


% GLOSSARY
%
% The glossary environment must do the following:
% - produce a separator page with the word glossary centered
% - produce the table of contents entry for the glossary
% - start a new page with the word GLOSSARY centered two inches from the top
%
%       - cew
%
\def\glossary{
  \chapter*{GLOSSARY}
  \addcontentsline{toc}{chapter}{GLOSSARY}
}

\def\endglossary{\par\newpage}


%
% I had trouble getting these next sections headers to come out two
% inches down like they're supposed to.  I finally handled them using 
% \chapter*.  Much to my surprise they're still *slightly* lower
% than real chapter headings, but they're probably good enough.  I
% guess this use of \chapter* reduces flexibility a little (since these
% environments don't have to mimic chapters), but this sort of flexibility
% is probably confusing rather than helpful anyway.  - jtr
%

% VITA
%
% The vita environment must do the following:
% - produce a separator page with the word vita centered
% - produce the table of contents entry for the vita
% - start a new page with the word VITA centered two inches from the top
%
%       - jtr
%
\def\vita{
  \separatorpage{VITA}
  \chapter*{VITA}
  \addcontentsline{toc}{chapter}{VITA}
}

\def\endvita{\par\newpage}


% ACKNOWLEDGMENTS
%
% The acknowledgments environment must do the following:
% - start a new page with the word ACKNOWLEDGMENTS centered 
%   two inches from the top
%
% - jtr
%
\def\acknowledgments{
  \chapter*{ACKNOWLEDGMENTS}
  \doublespace
}

\def\endacknowledgments{\par\newpage}

% DEDICATION
%
% The dedication environment must do the following:
% - start a new page
% - put text 1/3 of way down page
% - include the text in a center environment
%
% - jtr
%
\def\dedication{
  \newpage
  \null\vfil
  \begin{center}
}

\def\enddedication{\end{center}\par\vfil\vfil\newpage}


%    ****************************************
%    *                LISTS                 *
%    ****************************************
%

% The following commands are used to set the default values for the list
% environment's parameters. See the LaTeX manual for an explanation of
% the meanings of the parameters.  Defaults for the list environment are
% set as follows.  First, \rightmargin, \listparindent and \itemindent
% are set to 0pt.  Then, for a Kth level list, the command \@listK is
% called, where 'K' denotes 'i', 'ii', ... , 'vi'.  (I.e., \@listiii is
% called for a third-level list.)  By convention, \@listK should set
% \leftmargin to \leftmarginK.
%
% For efficiency, level-one list's values are defined at top level, and
% \@listi is defined to set only \leftmargin.

\leftmargini 2.5em
\leftmarginii 2.2em     % > \labelsep + width of '(m)'
\leftmarginiii 1.87em   % > \labelsep + width of 'vii.'
\leftmarginiv 1.7em     % > \labelsep + width of 'M.'
\leftmarginv 1em
\leftmarginvi 1em

\leftmargin\leftmargini
\labelwidth\leftmargini\advance\labelwidth-\labelsep
\labelsep .5em
\parsep 5pt plus 2.5pt minus 1pt

\def\@listi{\leftmargin\leftmargini}

\def\@listii{\leftmargin\leftmarginii
   \labelwidth\leftmarginii\advance\labelwidth-\labelsep
   \topsep 5pt plus 2.5pt minus 1pt
   \parsep 2.5pt plus 1pt minus 1pt
   \itemsep \parsep}

\def\@listiii{\leftmargin\leftmarginiii
    \labelwidth\leftmarginiii\advance\labelwidth-\labelsep
    \topsep 2.5pt plus 1pt minus 1pt 
    \parsep \z@ \partopsep 1pt plus 0pt minus 1pt
    \itemsep \topsep}

\def\@listiv{\leftmargin\leftmarginiv
     \labelwidth\leftmarginiv\advance\labelwidth-\labelsep}

\def\@listv{\leftmargin\leftmarginv
     \labelwidth\leftmarginv\advance\labelwidth-\labelsep}

\def\@listvi{\leftmargin\leftmarginvi
     \labelwidth\leftmarginvi\advance\labelwidth-\labelsep}

